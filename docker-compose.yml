version: '3.2'
#
# source: https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb/fpm/docker-compose.yml

networks:
  mariadb_net: {} 
  traefik_net:
    external: 
      name: ${TRAEFIK_NETWORK}

services:
  db:
    image: linuxserver/mariadb:alpine-version-10.5.12-r0
    container_name: mariadb
    hostname: mariadb
    restart: unless-stopped 
    networks:
      - mariadb_net
    # no need to export ports, containers will communicate over the mariadb_net
    #ports:
      #- 3306:3306
    volumes:
      - mariadb:/config
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - FILE__MYSQL_ROOT_PASSWORD=/run/secrets/mariadb_root_password
      - FILE__MYSQL_PASSWORD=/run/secrets/mariadb_password
    secrets:
      - mariadb_root_password
      - mariadb_password

  redis:
    image: redis:6.2.5-alpine
    container_name: redis
    restart: unless-stopped
    networks:
      - traefik_net
    volumes:
      - redis:/data:rw

  app:
    image: nextcloud:production-fpm-alpine
    container_name: nextcloud
    hostname: nextcloud
    restart: unless-stopped 
    # ports should not be exposed because the entrypoint will be traefik 
    #ports:
    #  - 9000:9000
    networks:
      - mariadb_net
      - traefik_net
    volumes:
      - nextcloud:/var/www/html:rw
    environment:
      - REDIS_HOST=redis
      - MYSQL_HOST=mariadb
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD_FILE=/run/secrets/mariadb_password
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nextcloud_admin_user
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nextcloud_admin_password
      - NEXTCLOUD_TRUSTED_DOMAINS=gonkalvesfamily.duckdns.org nextcloud.gonkalvesfamily.duckdns.org
      - TRUSTED_PROXIES=traefik
    depends_on:
      - db
    secrets:
      - nextcloud_admin_user
      - nextcloud_admin_password
      - mariadb_password

  web:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped 
    # ports should not be exposed because the entrypoint will be traefik 
    #ports:
    #  - 80:80
    networks:
      - traefik_net
    volumes:
      - nextcloud:/var/www/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    labels:
      traefik.enable: "true"
      traefik.docker.network: ${TRAEFIK_NETWORK}

      # route: router-nextcloud-secure (https)
      traefik.http.routers.router-nextcloud-secure.rule: Host(`nextcloud.${DOMAINNAME}`)
      traefik.http.routers.router-nextcloud-secure.entryPoints: websecure
      traefik.http.routers.router-nextcloud-secure.tls: "true"
      traefik.http.routers.router-nextcloud-secure.middlewares: mdw-nextcloud-secured

      # route: service
      traefik.http.routers.router-nextcloud-secure.service: srv-nextcloud

      # middlewares
      # middleware: mdw-nextcloud-redirectregex-dav
      traefik.http.middlewares.mdw-nextcloud-redirectregex-dav.redirectRegex.permanent: "true"
      traefik.http.middlewares.mdw-nextcloud-redirectregex-dav.redirectRegex.regex: "https://([a-zA-Z.]+)/.well-known/(card|cal)dav"
      traefik.http.middlewares.mdw-nextcloud-redirectregex-dav.redirectRegex.replacement: "https://$${1}/remote.php/dav/"
      
      # middleware: mdw-nextcloud-redirectregex-services
      traefik.http.middlewares.mdw-nextcloud-redirectregex-services.redirectRegex.permanent: "true"
      traefik.http.middlewares.mdw-nextcloud-redirectregex-services.redirectRegex.regex: "https://([a-zA-Z.]+)/.well-known/(.*)"
      traefik.http.middlewares.mdw-nextcloud-redirectregex-services.redirectRegex.replacement: "https://$${1}/index.php/.well-known/$${2}"

      # middleware: mdw-nextcloud-secured
      traefik.http.middlewares.mdw-nextcloud-secured.chain.middlewares: mdw-nextcloud-headers,mdw-nextcloud-redirectregex-dav,mdw-nextcloud-redirectregex-services

      # middleware: mdw-nextcloud-headers
      #traefik.http.middlewares.mdw-nextcloud-headers.headers.SSLHost: nextcloud.${DOMAINNAME}
      #traefik.http.middlewares.mdw-nextcloud-headers.headers.SSLForceHost: "true"
      #traefik.http.middlewares.mdw-nextcloud-headers.headers.SSLRedirect: "true"
      traefik.http.middlewares.mdw-nextcloud-headers.headers.browserXSSFilter: "true"
      traefik.http.middlewares.mdw-nextcloud-headers.headers.contentTypeNosniff: "true"
      traefik.http.middlewares.mdw-nextcloud-headers.headers.forceSTSHeader: "true"
      traefik.http.middlewares.mdw-nextcloud-headers.headers.STSSeconds: 315360000
      traefik.http.middlewares.mdw-nextcloud-headers.headers.STSIncludeSubdomains: "true"
      traefik.http.middlewares.mdw-nextcloud-headers.headers.STSPreload: "true"
      traefik.http.middlewares.mdw-nextcloud-headers.headers.customResponseHeaders.X-Robots-Tag:noindex: "nofollow,nosnippet,noarchive,notranslate,noimageindex"
      traefik.http.middlewares.mdw-nextcloud-headers.headers.frameDeny: "true"
      #traefik.http.middlewares.mdw-nextcloud-headers.headers.customFrameOptionsValue: 'allow-from https:${DOMAINNAME}'
      traefik.http.middlewares.mdw-nextcloud-headers.headers.customFrameOptionsValue: 'sameorigin'

      # services
      traefik.http.services.srv-nextcloud.loadbalancer.server.port: 80

volumes:
  mariadb:
  redis:
  nextcloud:

secrets:
  nextcloud_admin_user:
    # put admin username to this file
    file: ./nextcloud_admin_user
  nextcloud_admin_password:
    # put admin password to this file
    file: ./nextcloud_admin_password
  mariadb_root_password:
    # put mariadb root password to this file
    file: ./mariadb_root_password
  mariadb_password:
    # put mariadb password to this file
    file: ./mariadb_password
